# Python code @colordice
 

import base64, codecs
magic = 'ZnJvbSBpdGVydG9vbHMgaW1wb3J0IHJlcGVhdA0KaW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCByYW5kb20NCmltcG9ydCBhcmdwYXJzZQ0KaW1wb3J0IHN5cywgb3MNCmltcG9ydCBwYXRobGliDQppbXBvcnQgZGF0ZXRpbWUgYXMgZHQNCmltcG9ydCBzb2NrZXQNCmltcG9ydCBoYXNobGliDQppbXBvcnQga2V5Ym9hcmQNCmltcG9ydCBnZXRwYXNzDQpmcm9tIGNvbG9yZWQgaW1wb3J0IGZnLCBiZywgYXR0cg0KaW1wb3J0IGxvZ2dpbmcsIGNvbG9yZWRsb2dzDQpmcm9tIHJhbmRvbSBpbXBvcnQgcmFuZGludA0KZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUNCmZyb20gcmVxdWVzdHMuYXBpIGltcG9ydCBkZWxldGUsIHB1dA0KaW1wb3J0IHdlYnNvY2tldA0KZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3Blbg0KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXANCmZyb20gb3MgaW1wb3J0IGdldHBpZCwgc3lzdGVtLCBuYW1lDQpmcm9tIGlucHV0aW1lb3V0IGltcG9ydCBpbnB1dGltZW91dCwgVGltZW91dE9jY3VycmVkDQpmcm9tIGZhdW5hZGIgaW1wb3J0IHF1ZXJ5IGFzIHENCmZyb20gZmF1bmFkYi5vYmplY3RzIGltcG9ydCBSZWYNCmZyb20gZmF1bmFkYi5jbGllbnQgaW1wb3J0IEZhdW5hQ2xpZW50DQpmcm9tIHVybGxpYi5wYXJzZSBpbXBvcnQgcXVvdGVfcGx1cw0KZnJvbSByYW5kb21fdXNlcl9hZ2VudC51c2VyX2FnZW50IGltcG9ydCBVc2VyQWdlbnQNCmZyb20gcmFuZG9tX3VzZXJfYWdlbnQucGFyYW1zIGltcG9ydCBTb2Z0d2FyZU5hbWUsIE9wZXJhdGluZ1N5c3RlbQ0KDQpsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcihmIkxvZ2dlciIpDQpjb2xvcmVkbG9ncy5pbnN0YWxsKGxvZ2dlcj1sb2dnZXIpDQoNCnNvZnR3YXJlX25hbWVzID0gW1NvZnR3YXJlTmFtZS5DSFJPTUUudmFsdWVdDQpvcGVyYXRpbmdfc3lzdGVtcyA9IFtPcGVyYXRpbmdTeXN0ZW0uV0lORE9XUy52YWx1ZSwgT3BlcmF0aW5nU3lzdGVtLkxJTlVYLnZhbHVlXSAgIA0KDQp1c2VyX2FnZW50X3JvdGF0b3IgPSBVc2VyQWdlbnQoc29mdHdhcmVfbmFtZXM9c29mdHdhcmVfbmFtZXMsIG9wZXJhdGluZ19zeXN0ZW1zPW9wZXJhdGluZ19zeXN0ZW1zLCBsaW1pdD0xMDApDQoNCndzb2tldCA9IHdlYnNvY2tldC5XZWJTb2NrZXQoKQ0KY2xpZW50ID0gRmF1bmFDbGllbnQoc2VjcmV0PSJmbkFFQWNBS2xpQUNDSkgwMEJmVlNIMmRQWjBFSU1QV0hsTUNUYkVYIikNCg0KIyBTRVQgQkVUU0VUDQpwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigNCiAgICBkZXNjcmlwdGlvbj0nOTk5IERpY2UgQm90IHwgVGhpcyBJcyBHYW1ibGluZyBCb3QgUGxhc2UgVGFrZSBPd24gWW91ciBSaXNrJykNCnBhcnNlci5hZGRfYXJndW1lbnQoDQogICAgJy1jJywgJy0tYmV0c2V0JywNCiAgICBkZWZhdWx0PTAsDQogICAgaGVscD0nRW50ZXIgWW91ciBCZXRzZXQgTnVtYmVyIChkZWZhdWx0OiAwKScNCikNCm15X25hbWVzcGFjZSA9IHBhcnNlci5wYXJzZV9hcmdzKCkNCg0Kd2l0aCBvcGVuKCdzZXR0aW5ncy5qc29uJywgJ3InKSBhcyBteWZpbGU6DQogICAgZGF0YSA9IG15ZmlsZS5yZWFkKCkNCiMgUEFSU0UgRklMRQ0Kb2JqID0ganNvbi5sb2FkcyhkYXRhKQ0KDQojIyBLRVlCT0FSRCBTSE9SVENVVA0Kc3RvcG9ud2lua2V5ICA9ICdjdHJsK3cnDQoNCiMgQ09ORklHIFdBUk5BDQpyZXMgPSBhdHRyKCdyZXNldCcpDQpwdXRpaCA9IGZnKDI0OCkNCmhpdGFtID0gZmcoMjQyKQ0KaGlqYXUgPWZnKDExOSkNCm1lcmFoID0gZmcoMjA0KQ0KYXJteWdyZWVuID0gZmcoMTU0KQ0KcHJvZml0Y29sb3IgPSBiZygxMTMpICsgZmcoMTUpDQpsb3NlY29sb3IgPSBiZygyMDIpICsgZmcoMTUpDQpyY2NvbG9yID0gYmcoJ3doaXRlJykgKyBmZygnYmxhY2snKQ0KcmNmb250Y29sb3IgPSBmZygnYmxhY2snKQ0Kb3JhbmdlID0gZmcoMjE0KQ0KDQpjID0gcmVxdWVzdHMuc2Vzc2lvbigpDQpjLmNvb2tpZXMuY2xlYXIoKQ0KcHJveGllcyA9IFtdDQpwcm94eXN0YXR1cyA9IEZhbHNlDQpmcmVldmVyc2lvbiA9IFRydWUNCm5vbm1lbWJlcnN0YXR1cyA9IEZhbHNlDQpzdG9wb253aW5hY3RpdmF0ZWQgPSBGYWxzZQ0KcmVndXNlcm5hbWUgPSAiIg0KcmVncGFzc3dvcmQgPSAiIg0KbGlua2NvZGUgPSAiIg0KY2xpZW50ID0gRmF1bmFDbGllbnQoc2VjcmV0PSJmbkFFQWNBS2xpQUNDSkgwMEJmVlNIMmRQWjBFSU1QV0hsTUNUYkVYIikNCg0KIyMgU1RPUCBPTiBXSU4gS0VZQk9BUkQgVFJJR0VSDQpkZWYgc3RvcG9ud2luX3RyaWdlcigpOg0KICAgIGdsb2JhbCBzdG9wb253aW5hY3RpdmF0ZWQNCiAgICBzdG9wb253aW5hY3RpdmF0ZWQgPSBUcnVlDQoNCmRlZiB0aW1lcHJvY2VzcyhzZWMpOg0KICAgIG1pbnV0ZXMsIHNlY29uZHMgPSBkaXZtb2Qoc2VjLCA2MCkNCiAgICBob3VycywgbWludXRlcyA9IGRpdm1vZChtaW51dGVzLCA2MCkNCiAgICBkYXlzLCBob3VycyA9IGRpdm1vZChob3VycywgMjQpDQogICAgc3RvcHdhdGNoeCA9IChkYXlzLCBob3VycywgbWludXRlcywgc2Vjb25kcykNCg0KICAgIHJldHVybiBzdG9wd2F0Y2h4DQoNCmRlZiBzZXRtc2dib3goKToNCg0KICAgIHRyeToNCiAgICAgICAgbXNnID0gY2xpZW50LnF1ZXJ5KA0KICAgICAgICAgICAgcS5nZXQocS5tYXRjaChxLmluZGV4KCJwYXJhbV9ieV9pZCIpLCAibWVzc2FnZWJveCIpKSkNCiAgICAgICAgbXNnYm94ID0gbXNnWyJkYXRhIl1bIm1lc3NhZ2UiXQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgbXNnYm94ID0gIi0iDQoNCiAgICByZXR1cm4gbXNnYm94DQoNCmRlZiBiYW5uZXIoKToNCiAgICAjIEJBTk5FUg0KICAgIGJhbm5lciA9ICJcblxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArIGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyBhdHRyKCdib2xkJykgKyAiIOKWhOKWhMK3ICAgICAgIOKWhOKWhOKWjCAgICAgICAg4paE4paE4paEICDCt+KWhOKWhOKWhOKWhCAg4paqICAg4paE4paEwrcg4paE4paE4paEIC5cbiIgKyByZXMNCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBmZyhyb3VuZChyYW5kb20udW5pZm9ybSgyMCwgMjE5KSkpICsgYXR0cignYm9sZCcpICsgIuKWkOKWiCDilozilqrilqogICAgIOKWiOKWiOKAoiAg4paqICAgICDiloDiloQg4paIwrfilojilojilqog4paI4paIIOKWiOKWiCDilpDilogg4paM4paq4paA4paELuKWgMK3XG4iICsgcmVzDQogICAgYmFubmVyID0gYmFubmVyICsgZmcocm91bmQocmFuZG9tLnVuaWZvcm0oMjAsIDIxOSkpKSArIGF0dHIoJ2JvbGQnKSArICLilojilogg4paE4paEIOKWhOKWiOKWgOKWhCDilojilojilqogICDiloTilojiloDiloQg4paQ4paA4paA4paEIOKWkOKWiMK3IOKWkOKWiOKWjOKWkOKWiMK34paI4paIIOKWhOKWhOKWkOKWgOKWgOKWquKWhFxuIiArIHJlcw0KICAgIGJhbm5lciA9IGJhbm5lciArIGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyBhdHRyKCdib2xkJykgKyAi4paQ4paI4paI4paI4paM4paQ4paI4paMLuKWkOKWjOKWkOKWiOKWjOKWkOKWjOKWkOKWiOKWjC7ilpDilozilpDilojigKLilojilozilojiloguIOKWiOKWiCDilpDilojilozilpDilojilojilojilozilpDilojiloTiloTiloxcbiIgKyByZXMNCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBmZyhyb3VuZChyYW5kb20udW5pZm9ybSgyMCwgMjE5KSkpICsgYXR0cignYm9sZCcpICsgIsK34paA4paA4paAICDiloDilojiloTiloDilqou4paA4paA4paAICDiloDilojiloTiloDilqou4paAICDiloDiloDiloDiloDiloDiloDigKIg4paA4paA4paAwrfiloDiloDiloAgIOKWgOKWgOKWgCBcbiIgKyByZXMNCiAgICBiYW5uZXIgPSBiYW5uZXIgKyAiXG4iDQogICAgYmFubmVyID0gYmFubmVyICsgcHV0aWggKyBhdHRyKCdib2xkJykgKyAiVGVsZWdyYW0gICAgOiAiICsgcmVzDQogICAgYmFubmVyID0gYmFubmVyICsgZmcoMTUpICsgIkBiZWR1cGxheVxuIiArIHJlcw0KICAgIGJhbm5lciA9IGJhbm5lciArIHB1dGloICsgYXR0cignYm9sZCcpICsgIlZlcnNpb24gICAgIDogIiArIHJlcw0KICAgIGJhbm5lciA9IGJhbm5lciArIGZnKDE1KSArICJ2LjMuMFxuIiArIHJlcw0KICAgIHByaW50KGJhbm5lcikNCg0KdXNlcm5hbWUgPSBvYmpbIkFjY291bnQiXVsiVXNlcm5hbWUiXQ0KcGFzc3dvcmQgPSBvYmpbIkFjY291bnQiXVsiUGFzc3dvcmQiXQ0KDQp1cmwgPSAiaHR0cHM6Ly93d3cuOTk5ZG9nZS5jb20vYXBpL3dlYi5hc3B4Ig0KdXNlcl9hZ2VudCA9IHVzZXJfYWdlbnRfcm90YXRvci5nZXRfcmFuZG9tX3VzZXJfYWdlbnQoKQ0KdWEgPSB7DQogICJVc2VyLUFnZW50Ijogc3RyKHVzZXJfYWdlbnQpLA0KICAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43LHpoLUNOO3E9MC42LHpoO3E9MC41Ig0KfQ0KdWFkYXRhID0gew0KICAgICJPcmlnaW4iOiAiZmlsZTovLyIsDQogICAgIlVzZXItQWdlbnQiOiBzdHIodXNlcl9hZ2VudCksDQogICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyx6aC1DTjtxPTAuNix6aDtxPTAuNSIsDQogICAgIkNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLA0KICAgICJBY2NlcHQiOiAiKi8qIiwNCiAgICAiWC1SZXF1ZXN0ZWQtV2l0aCI6ICJjb20ucmVsYW5kLnJlbGFuZGljZWJvdCINCn0NCg0KIyBDTEVBTiBQQUdFDQpkZWYgY2xlYXIoKToNCg0KICAgICMgZm9yIHdpbmRvd3MNCiAgICBpZiBuYW1lID09ICdudCc6DQogICAgICAgIF8gPSBzeXN0ZW0oJ2NscycpDQoNCiAgICAjIGZvciBtYWMgYW5kIGxpbnV4KGhlcmUsIG9zLm5hbWUgaXMgJ3Bvc2l4JykNCiAgICBlbHNlOg0KICAgICAgICBfID0gc3lzdGVtKCdjbGVhcicpDQoNCiMgQ09OVkVSVCBCRVQgJiBBTU9VTlQNCmRlZiBrb252ZXJ0KHBlcnNlbiwgdGFydWhhbik6DQogICAgZ2xvYmFsIGhpZ2gNCiAgICBnbG9iYWwgbG93DQogICAgYyA9IHN0cig5OTk5OTkgKiBmbG9hdChwZXJzZW4pIC8gMTAwKQ0KICAgIGlmIHRhcnVoYW4gPT0gIkhpIiBvciB0YXJ1aGFuID09ICJoaSIgb3IgdGFydWhhbiA9PSAiSEkiOg0KICAgICAgICBuID0gc3RyKGMuc3BsaXQoIi4iKVsxXSkNCiAgICAgICAgcGFuZ2thdCA9IDYgLSBsZW4obikNCiAgICAgICAgbG93ID0gaW50KGludChuKSAqICgxMCAqKiBwYW5na2F0KSkNCiAgICAgICAgaGlnaCA9IDk5OTk5OQ0KICAgIGlmIHRhcnVoYW4gPT0gIkxvIiBvciB0YXJ1aGFuID09ICJMT1ciIG9yIHRhcnVoYW4gPT0gImxvdyIgb3IgdGFydWhhbiA9PSAiTG93IiBvciB0YXJ1aGFuID09ICJMTyI6DQogICAgICAgIGxvdyA9IDANCiAgICAgICAgaGlnaCA9IGludChjLnNwbGl0KCIuIilbMF0pDQoNCiMgREVDSU1BTCA4IERJR0lUDQpkZWYgcmV2KG51bSk6DQogICAgaWYgKGxlbihudW0pIDwgOCk6DQogICAgICAgIHBhbmphbmdfbm9sID0gaW50KDggLSBsZW4obnVtKSkNCiAgICAgICAgbnVtID0gKChwYW5qYW5nX25vbCoiMCIpK3N0cihudW0pKQ0KICAgICAgICByZXN1bHQgPSAoIjAuIitudW0pDQogICAgaWYgKGxlbihudW0pID09IDgpOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCg4IC0gbGVuKG51bSkpDQogICAgICAgIG51bSA9ICgocGFuamFuZ19ub2wqIjAiKStzdHIobnVtKSkNCiAgICAgICAgcmVzdWx0ID0gKCIwLiIrbnVtKQ0KICAgIGVsc2U6DQogICAgICAgIGxlbl9udW0gPSBsZW4obnVtKQ0KICAgICAgICBlbmQgPSBudW1bLTg6XQ0KICAgICAgICBmaXJzdCA9IG51bVs6bGVuX251bS04XQ0KICAgICAgICByZXN1bHQgPSAoZmlyc3QrIi4iK2VuZCkNCiAgICByZXR1cm4gKHJlc3VsdCkNCg0KIyMgRk9STUFUIDExIERJR0lUDQpkZWYgcmV2bG9uZyhudW0pOg0KICAgIGlmIChsZW4obnVtKSA8IDExKToNCiAgICAgICAgcGFuamFuZ19ub2wgPSBpbnQoMTEgLSBsZW4obnVtKSkNCiAgICAgICAgbnVtID0gKChwYW5qYW5nX25vbCoiMCIpK3N0cihudW0pKQ0KICAgICAgICByZXN1bHQgPSAoIjAuIitudW0pDQogICAgaWYgKGxlbihudW0pID09IDExKToNCiAgICAgICAgcGFuamFuZ19ub2wgPSBpbnQoMTEgLSBsZW4obnVtKSkNCiAgICAgICAgbnVtID0gKChwYW5qYW5nX25vbCoiMCIpK3N0cihudW0pKQ0KICAgICAgICByZXN1bHQgPSAoIjAuIitudW0pDQogICAgZWxzZToNCiAgICAgICAgbGVuX251bSA9IGxlbihudW0pDQogICAgICAgIGVuZCA9IG51bVstMTE6XQ0KICAgICAgICBmaXJzdCA9IG51bVs6bGVuX251bS0xMV0NCiAgICAgICAgcmVzdWx0ID0gKGZpcnN0KyIuIitlbmQpDQogICAgICAgIHRtcHJzID0gaW50KGZsb2F0KHJlc3VsdCkqKDEwICoqIDExKSkNCiAgICAgICAgcmVzdWx0ID0gKGZpcnN0KyIuIitlbmQpDQogICAgcmV0dXJuIChyZXN1bHQpDQoNCiMgQVBJIElORE9EQVggRk9SIEdFVCBMQVNUIFBSSUNFDQpkZWYgaW5kb2RheChjb2luKToNCg0KICAgIHRyeToNCiAgICAgICAgaWYgY29pbiA9PSAiRE9HRSIgb3IgY29pbiA9PSAiZG9nZSIgb3IgY29pbiA9PSAiRG9nZSI6DQogICAgICAgICAgICBwYWlyID0gImRvZ2VfaWRyIg0KICAgICAgICBlbGlmIGNvaW4gPT0gIkxUQyIgb3IgY29pbiA9PSAibHRjIiBvciBjb2luID09ICJMdGMiOg0KICAgICAgICAgICAgcGFpciA9ICJsdGNfaWRyIg0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcGFpciA9ICJldGhfaWRyIg0KDQogICAgICAgIHVybCA9ICdodHRwczovL2luZG9kYXguY29tL2FwaS8nICsgc3RyKHBhaXIpICsgJy90aWNrZXInDQoNCiAgICAgICAgaW5keCA9IHJlcXVlc3RzLmdldCh1cmwpDQogICAgICAgIGpzaW5keCA9IGpzb24ubG9hZHMoaW5keC50ZXh0KQ0KICAgICAgICBwcmljZXBhaXIgPSBpbnQoanNpbmR4WyJ0aWNrZXIiXVsibGFzdCJdKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgaWYgY29pbiA9PSAiRE9HRSIgb3IgY29pbiA9PSAiZG9nZSIgb3IgY29pbiA9PSAiRG9nZSI6DQogICAgICAgICAgICBjb2lucGFpciA9ICJkb2dlIg0KICAgICAgICBlbGlmIGNvaW4gPT0gIkxUQyIgb3IgY29pbiA9PSAibHRjIiBvciBjb2luID09ICJMdGMiOg0KICAgICAgICAgICAgY29pbnBhaXIgPSAibHRjIg0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgY29pbnBhaXIgPSAiZXRoIg0KDQogICAgICAgIHVybCA9ICJodHRwczovL2JlZHVjb2RlLXByaWNlLmhlcm9rdWFwcC5jb20vcHJpY2UvIiArIHN0cihjb2lucGFpcikNCg0KICAgICAgICBwcmljZSA9IGMuZ2V0KHVybCkNCiAgICAgICAgZGF0YSA9IGpzb24ubG9hZHMocHJpY2UudGV4dCkNCiAgICAgICAgcHJpY2VwYWlyID0gZGF0YVsibGFzdCJdDQoNCiAgICByZXR1cm4gcHJpY2VwYWlyDQoNCiMgRk9STUFUIFZBTFVFIFRPIElEUg0KZGVmIHJ1cGlhaF9mb3JtYXQoYW5na2EpOg0KICAgIHJldHVybiAnUnAgJyArICd7OjAsLjJmfScuZm9ybWF0KGFuZ2thKQ0KDQojIyBDSEVDSyBDVVJSRU5DWQ0KZGVmIGNoZWNrY3VycihjdXJyLCBkYXRhKToNCiAgICBpZiBjdXJyID09ICJET0dFIiBvciBjdXJyID09ICJkb2dlIiBvciBjdXJyID09ICJEb2dlIjoNCiAgICAgICAgY3VycmJhbGFuY2UgPSBkYXRhW2N1cnJlbmN5XVsiQmFsYW5jZSJdDQogICAgZWxpZiBjdXJyID09ICJMVEMiIG9yIGN1cnIgPT0gImx0YyIgb3IgY3VyciA9PSAiTHRjIjoNCiAgICAgICAgY3VycmJhbGFuY2UgPSBkYXRhW2N1cnJlbmN5XVsiQmFsYW5jZSJdDQogICAgZWxzZToNCiAgICAgICAgY3VycmJhbGFuY2UgPSBkYXRhW2N1cnJlbmN5XVsiQmFsYW5jZSJdDQoNCiAgICByZXR1cm4gY3VycmJhbGFuY2UNCg0KIyMgQ0hFQ0sgTE9HSU4NCmRlZiBjaGVja2xvZ2luKHN0YXR1cyk6DQogICAgaWYgc3RhdHVzIGlzIFRydWU6DQogICAgICAgIGNsZWFyKCkNCiAgICAgICAgYmFubmVyKCkNCg0KICAgICAgICBwcmludChtZXJhaCArICJDaGVjayBZb3VyIFVzZXJuYW1lIG9yIFBhc3N3b3JkIEFnYWluIGluIHRoZSBzZXR0aW5ncy5qc29uIGZpbGUgRmlsZSIgKyByZXMpDQogICAgICAgIHN5cy5leGl0KCkNCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQoNCiMgREVLIE1PREUgUlVOIEFLVElGDQpkZWYgY2hlY2ttb2RlcnVuKCk6DQogICAgbW9kZXJ1biA9IDANCiAgICB1cnV0ID0gaW50KG15X25hbWVzcGFjZS5iZXRzZXQpDQogICAgaWYgb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTEiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMSJdWyJUb2dnbGUiXSA9PSAib24iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUxIl1bIlRvZ2dsZSJdID09ICJPbiI6DQogICAgICAgIG1vZGVydW4gKz0gMQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCiAgICBpZiBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMiJdWyJUb2dnbGUiXSA9PSAiT04iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUyIl1bIlRvZ2dsZSJdID09ICJvbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTIiXVsiVG9nZ2xlIl0gPT0gIk9uIjoNCiAgICAgICAgbW9kZXJ1biArPSAxDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KICAgIGlmIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUzIl1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTMiXVsiVG9nZ2xlIl0gPT0gIm9uIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMyJdWyJUb2dnbGUiXSA9PSAiT24iOg0KICAgICAgICBtb2RlcnVuICs9IDENCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQogICAgaWYgb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTQiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlNCJdWyJUb2dnbGUiXSA9PSAib24iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGU0Il1bIlRvZ2dsZSJdID09ICJPbiI6DQogICAgICAgIG1vZGVydW4gKz0gMQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCiAgICBpZiBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlNSJdWyJUb2dnbGUiXSA9PSAiT04iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGU1Il1bIlRvZ2dsZSJdID09ICJvbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTUiXVsiVG9nZ2xlIl0gPT0gIk9uIjoNCiAgICAgICAgbW9kZXJ1biArPSAxDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KICAgIGlmIG9ialsiQmV0c2V0Il1bdXJ1dF1bIlB1c2hiZXQiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJQdXNoYmV0Il1bIlRvZ2dsZSJdID09ICJvbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiUHVzaGJldCJdWyJUb2dnbGUiXSA9PSAiT24iOg0KICAgICAgICBtb2RlcnVuICs9IDENCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQogICAgaWYgb2JqWyJCZXRzZXQiXVt1cnV0XVsiRGFsZW1iZXJ0Il1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiRGFsZW1iZXJ0Il1bIlRvZ2dsZSJdID09ICJvbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiRGFsZW1iZXJ0Il1bIlRvZ2dsZSJdID09ICJPbiI6DQogICAgICAgIG1vZGVydW4gKz0gMQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCiAgICBpZiBvYmpbIkJldHNldCJdW3VydXRdWyJGaWJvbmFjY2kiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJGaWJvbmFjY2kiXVsiVG9nZ2xlIl0gPT0gIm9uIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJGaWJvbmFjY2kiXVsiVG9nZ2xlIl0gPT0gIk9uIjoNCiAgICAgICAgbW9kZXJ1biArPSAxDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KDQogICAgcmV0dXJuIG1vZGVydW4NCg0KIyBWQUxJREFTSSBNT0RFIFJVTg0KZGVmIHZhbGlkYXRlbW9kZXJ1bihtb2RlcnVuKToNCiAgICBpZiBtb2RlcnVuID4gMToNCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBiYW5uZXIoKQ0KDQogICAgICAgIHByaW50KGFybXlncmVlbiArICdccicgKyBwdXRpaCArICc+PiAnICsgcmVzICsgbWVyYWggKyAnWW91IEFjdGl2YXRlIE1vcmUgVGhhbiAxIE1vZGUhIScgKw0KICAgICAgICAgICAgICByZXMgKyBwdXRpaCArICcsIFBsZWFzZSBDaGVjayBZb3VyIFNldHRpbmdzLmpzb24gRmlsZSBBZ2FpbicgKyByZXMpDQogICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgc3lzLmV4aXQoKQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCg0KIyMgQ0hFQ0sgMkZBDQpkZWYgYXV0aDJmYSgpOg0KICAgICMgQ0xFQVIgQkVGT1JFDQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQoNCiAgICB0cnk6DQogICAgICAgIGlucHV0b3RwID0gYXJteWdyZWVuICsgJ1xyJyArIHB1dGloICsgJz4+ICcgKyByZXMgKyBvcmFuZ2UgKyBcDQogICAgICAgICAgICAnUGxlYXNlIGVudGVyIHlvdXIgZ29vZ2xlIGF1dGhlbnRpY2F0b3IgY29kZSA6ICcgKyByZXMNCiAgICAgICAgb3RwaW5wdXQgPSBpbnB1dGltZW91dChwcm9tcHQ9aW5wdXRvdHAsIHRpbWVvdXQ9NjAwKQ0KICAgICAgICBpZiBvdHBpbnB1dCA9PSAiIjoNCiAgICAgICAgICAgIGF1dGgyZmEoKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcmV0dXJuIG90cGlucHV0DQoNCiAgICBleGNlcHQgVGltZW91dE9jY3VycmVkOg0KICAgICAgICBhdXRoMmZhKCkNCg0KDQptZGNvdW50ID0gY2hlY2ttb2RlcnVuKCkNCnZhbGlkYXRlbW9kZXJ1bihtZGNvdW50KQ0KDQpyZXNldHNlZWQgPSBpbnQob2JqWyJBY2NvdW50Il1bIlJlc2V0IFNlZWQiXSkNCiMgU0VUIFVQIEFQSSBBS1NFUyBGUk9NIDk5OURPR0UuQ09NDQppZiBvYmpbIkFjY291bnQiXVsiQVBJIEFjY2VzcyJdID09ICJPRkYiIG9yIG9ialsiQWNjb3VudCJdWyJBUEkgQWNjZXNzIl0gPT0gIm9mZiIgb3Igb2JqWyJBY2NvdW50Il1bIkFQSSBBY2Nlc3MiXSA9PSAiT2ZmIjoNCiAgICBhcGlBa3NlcyA9ICI3Mzg5NDVmMmUyMWU0OWMwOThlZjk4NTQxNTg5MTNkZSINCmVsc2U6DQogICAgYXBpQWtzZXMgPSBvYmpbIkFjY291bnQiXVsiQVBJIEFjY2VzcyJdDQoNCmlmIG9ialsiQWNjb3VudCJdWyIyRkEiXSA9PSAiT04iIG9yIG9ialsiQWNjb3VudCJdWyIyRkEiXSA9PSAib24iIG9yIG9ialsiQWNjb3VudCJdWyIyRkEiXSA9PSAiT24iOg0KICAgIG90cHN0YXR1cyA9IFRydWUNCiAgICBvdHAgPSBhdXRoMmZhKCkNCmVsc2U6DQogICAgb3Rwc3RhdHVzID0gRmFsc2UNCg0KIyMgU1RPUCBPTiBXSU4NCmRlZiBzdG9wb253aW4ocHJvZml0LCBibCwgbWIsIGxzLCB0cCk6DQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQogICAgcHJpbnQoZmcoMTUpICsgIlN0b3Agb24gd2luIGFjdGl2YXRlZCwgWW91ciBQcm9maXQgOiAiICsNCiAgICAgICAgICByZXMgKyBoaWphdSArIHJldihzdHIocHJvZml0KSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiTGFzdCBNYXggQmV0IDogIiArIHJlcyArIG1lcmFoICsgcmV2KHN0cihtYikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJZb3VyIEN1cnJlbnQgQmFsYW5jZSA6ICIgKw0KICAgICAgICAgIHJlcyArIGhpamF1ICsgc3RyKHJldihzdHIoYmwpKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiVGltZSByZXF1aXJlZCA6ICIgKw0KICAgICAgICAgIHJlcyArIHB1dGloICsgc3RyKHRwKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJBbHdheXMgQmUgQ2FyZWZ1bCAmIFBsZWFzZSBSZXJ1biBUaGUgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKQ0KDQojIyBTVE9QIEJFVA0KZGVmIHN0b3BiZXQocHJvZml0LCBibCwgbWIsIGxzLCB0cCk6DQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQogICAgcHJpbnQoZmcoMTUpICsgIk1heGltdW0gQmV0IExpbWl0IEhhcyBCZWVuIEZ1bGZpbGxlZCwgWW91ciBQcm9maXQgOiAiICsNCiAgICAgICAgICByZXMgKyBoaWphdSArIHJldihzdHIocHJvZml0KSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiTGFzdCBNYXggQmV0IDogIiArIHJlcyArIG1lcmFoICsgcmV2KHN0cihtYikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJZb3VyIEN1cnJlbnQgQmFsYW5jZSA6ICIgKw0KICAgICAgICAgIHJlcyArIGhpamF1ICsgc3RyKHJldihzdHIoYmwpKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiVGltZSByZXF1aXJlZCA6ICIgKw0KICAgICAgICAgIHJlcyArIHB1dGloICsgc3RyKHRwKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJBbHdheXMgQmUgQ2FyZWZ1bCAmIFBsZWFzZSBSZXJ1biBUaGUgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKQ0KDQojIyBTVE9QIENVVCBMUw0KZGVmIGN1dGxvc2UoY3QsIGJsLCBscywgdHApOg0KICAgIGNsZWFyKCkNCiAgICBiYW5uZXIoKQ0KICAgIHByaW50KHB1dGloICsgIkN1dCBMb3NlIFRhcmdldCBIYXMgQmVlbiBSZWFjaGVkLCBNaW51cyBBbW91bnQgOiAiICsNCiAgICAgICAgICByZXMgKyBtZXJhaCArIHJldihzdHIoY3QpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJUb3RhbCBMb3NlIFN0cmlrZSA6ICIgKyByZXMgKyBtZXJhaCArIHN0cihscykgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiWW91ciBDdXJyZW50IEJhbGFuY2UgOiAiICsNCiAgICAgICAgICByZXMgKyBtZXJhaCArIHN0cihyZXYoc3RyKGJsKSkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIlRpbWUgcmVxdWlyZWQgOiAiICsNCiAgICAgICAgICByZXMgKyBwdXRpaCArIHRwICsgcmVzKQ0KICAgIHByaW50KG1lcmFoICsgIlNUT1AhISEiICsgcmVzICsgcHV0aWggKw0KICAgICAgICAgICIsIFJlY2FsY3VsYXRlIFlvdXIgQmV0c2V0ICYgVHJ5IEFuYWx5emluZyBBZ2FpbiIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KIyMgU1RPUCBMSU1JVCBMUw0KZGVmIHN0b3BsaW1pdGxzKHBmLCBibCwgbWIsIGxzLCB0cCk6DQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQogICAgcHJpbnQoZmcoMTUpICsgIkxvc2UgU3RyaWtlIExpbWl0IEhhcyBCZWVuIEZ1bGZpbGxlZCwgWW91ciBQcm9maXQgOiAiICsNCiAgICAgICAgICByZXMgKyBoaWphdSArIHJldihzdHIocGYpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJMYXN0IE1heCBCZXQgOiAiICsgcmVzICsgbWVyYWggKyByZXYoc3RyKG1iKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWggKyBzdHIobHMpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIllvdXIgQ3VycmVudCBCYWxhbmNlIDogIiArDQogICAgICAgICAgcmVzICsgaGlqYXUgKyBzdHIocmV2KHN0cihibCkpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJUaW1lIHJlcXVpcmVkIDogIiArDQogICAgICAgICAgcmVzICsgcHV0aWggKyBzdHIodHApICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIkFsd2F5cyBCZSBDYXJlZnVsICYgUGxlYXNlIFJlcnVuIFRoZSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpDQoNCiMjIFNUT1AgVEFSR0VUIFBST0ZJVA0KZGVmIHRhcmdldHByb2ZpdChwcm9maXQsIGJsLCBtYiwgbHMsIHRwKToNCiAgICBjbGVhcigpDQogICAgYmFubmVyKCkNCiAgICBwcmludChmZygxNSkgKyAiUHJvZml0IFRhcmdldCBIYXMgQmVlbiBBY2hpZXZlZCA6ICIgKw0KICAgICAgICAgIHJlcyArIGhpamF1ICsgcmV2KHN0cihwcm9maXQpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJMYXN0IE1heCBCZXQgOiAiICsgcmVzICsgbWVyYWggKyByZXYoc3RyKG1iKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWggKyBzdHIobHMpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIllvdXIgQ3VycmVudCBCYWxhbmNlIDogIiArDQogICAgICAgICAgcmVzICsgaGlqYXUgKyBzdHIocmV2KHN0cihibCkpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJUaW1lIHJlcXVpcmVkIDogIiArDQogICAgICAgICAgcmVzICsgcHV0aWggKyBzdHIodHApICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIkFsd2F5cyBCZSBDYXJlZnVsICYgUGxlYXNlIFJlcnVuIFRoZSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpDQoNCiMjIFNUT1AgQkFMQU5DRSBXSU4NCmRlZiB0YXJnZXRiYWxhbmNlKHByb2ZpdCwgYmwsIG1iLCBscywgdHApOg0KICAgIGNsZWFyKCkNCiAgICBiYW5uZXIoKQ0KICAgIHByaW50KGZnKDE1KSArICJUYXJnZXQgQmFsYW5jZSBIYXMgQmVlbiBSZWFjaGVkIDogIiArDQogICAgICAgICAgcmVzICsgaGlqYXUgKyByZXYoc3RyKHByb2ZpdCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIkxhc3QgTWF4IEJldCA6ICIgKyByZXMgKyBtZXJhaCArIHJldihzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJUb3RhbCBMb3NlIFN0cmlrZSA6ICIgKyByZXMgKyBtZXJhaCArIHN0cihscykgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiWW91ciBDdXJyZW50IEJhbGFuY2UgOiAiICsNCiAgICAgICAgICByZXMgKyBoaWphdSArIHN0cihyZXYoc3RyKGJsKSkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIlRpbWUgcmVxdWlyZWQgOiAiICsNCiAgICAgICAgICByZXMgKyBwdXRpaCArIHN0cih0cCkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiQWx3YXlzIEJlIENhcmVmdWwgJiBQbGVhc2UgUmVydW4gVGhlIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KIyMgU1RPUCBUQVJHRVQgTE9TUw0KZGVmIHRhcmdldGxvc2UodGwsIGJsLCBtYiwgbHMsIHRwKToNCiAgICBjbGVhcigpDQogICAgYmFubmVyKCkNCiAgICBwcmludChmZygxNSkgKyAiTG9zZSBUYXJnZXQgSGFzIEJlZW4gUmVhY2hlZCwgTWludXMgQW1vdW50IDogIiArDQogICAgICAgICAgcmVzICsgbWVyYWggKyByZXYoc3RyKHRsKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiTGFzdCBNYXggQmV0IDogIiArIHJlcyArIG1lcmFoICsgcmV2KHN0cihtYikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJZb3VyIEN1cnJlbnQgQmFsYW5jZSA6ICIgKw0KICAgICAgICAgIHJlcyArIG1lcmFoICsgc3RyKHJldihzdHIoYmwpKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiVGltZSByZXF1aXJlZCA6ICIgKw0KICAgICAgICAgIHJlcyArIHB1dGloICsgc3RyKHRwKSArIHJlcykNCiAgICBwcmludChtZXJhaCArICJTVE9QISEhIiArIHJlcyArIHB1dGloICsNCiAgICAgICAgICAiLCBSZWNhbGN1bGF0ZSBZb3VyIEJldHNldCAmIFRyeSBBbmFseXppbmcgQWdhaW4iICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpDQoNCiMjIEZJQk9OQUNISSBDQUxDVUxBVE9SDQpkZWYgZmlib2NhbChuKToNCiAgICBpZiBuIDw9IDE6DQogICAgICAgIHJldHVybiBuKzENCiAgICBlbHNlOg0KICAgICAgICByZXR1cm4oZmlib2NhbChuLTEpICsgZmlib2NhbChuLTIpKQ0KICAgIA0KIyAjIyBGSUJPTkFDSEkgQ0FMQ1VMQVRPUg0KIyBkZWYgcHVzaGJldChiYiwgZmIsIHJtKToNCiMgICAgIGlmIGZiIDw9IDE6DQojICAgICAgICAgZmJjYWwgPSBmYisxDQojICAgICAgICAgcmV0dXJuIChiYiAqIGZiY2FsKSArIHJtDQojICAgICBlbHNlOg0KIyAgICAgICAgIGZiY2FsID0gKGZpYm9jYWwoZmItMSkgKyBmaWJvY2FsKGZiLTIpKQ0KIyAgICAgICAgIHJldHVybiAoYmIgKiBmYmNhbCkgKyBybQ0KDQoNCiMgQ0xFQVIgQkVGT1JFDQpjbGVhcigpDQpiYW5uZXIoKQ0KDQpwaWxjdXJyID0gb2JqWyJBY2NvdW50Il1bIkN1cnJlbmN5Il0NCmlmIHBpbGN1cnIgPT0gIkRPR0UiIG9yIHBpbGN1cnIgPT0gImRvZ2UiIG9yIHBpbGN1cnIgPT0gIkRvZ2UiOg0KICAgIGN1cnJlbmN5ID0gIkRvZ2UiDQogICAgaW50Y3VyID0gMg0KZWxpZiBwaWxjdXJyID09ICJMVEMiIG9yIHBpbGN1cnIgPT0gImx0YyIgb3IgcGlsY3VyciA9PSAiTHRjIjoNCiAgICBjdXJyZW5jeSA9ICJMVEMiDQogICAgaW50Y3VyID0gMw0KZWxpZiBwaWxjdXJyID09ICJFVEgiIG9yIHBpbGN1cnIgPT0gImV0aCIgb3IgcGlsY3VyciA9PSAiRXRoIjoNCiAgICBjdXJyZW5jeSA9ICJFVEgiDQogICAgaW50Y3VyID0gNA0KZWxzZToNCiAgICBwcmludCgiQ3VycmVuY3kgdHlwZSBpcyBub3Qgc3VwcG9ydGVkLCBwbGVhc2UgY2hlY2sgeW91ciBzZXR0aW5ncy5qc29uIGZpbGUgYWdhaW4hIikNCiAgICBzeXMuZXhpdCgpDQoNCg0KIyMgQ09OTkVDVCBXSVRIIFNPQ0tFVA0KZGVmIGNvbm5lY3RiZXQodGV4dF9jbWQpOg0KICB3c29rZXQuc2VuZChqc29uLmR1bXBzKHRleHRfY21kKSkNCiAgd2hpbGUgVHJ1ZToNCiAgICByZXN1bHQgPSB3c29rZXQucmVjdigpDQogICAgaWYgInN0YXR1cyIgaW4gcmVzdWx0Og0KICAgICAganNuID0ganNvbi5sb2FkcyhyZXN1bHQpWyJSIl0NCiAgICAgIGlmIGpzblsic3RhdHVzIl0gPT0gMDoNCiAgICAgICAgICByZXR1cm4ganNuDQogICAgICBlbHNlOg0KICAgICAgICAgdGltZS5zbGVlcCgwLjUpDQogICAgICAgICBjb25uZWN0YmV0KHRleHRfY21kKQ0KDQojIFVJIFJBTkdFIENIQU5DRQ0KZGVmIHJhbmdlQ2hhbmNlKGhjKToNCiAgICBwYW5qYW5ncmQgPSBsZW4oc3RyKGhjKSkNCiAgICBpZiBwYW5qYW5ncmQgPT0gMzoNCiAgICAgICAgY2hhbmNlcmFuZCA9ICIgIiArIHN0cihoYykgKyAiICAgIg0KICAgIGlmIHBhbmphbmdyZCA9PSA0Og0KICAgICAgICBjaGFuY2VyYW5kID0gIiAiICsgc3RyKGhjKSArICIgICINCiAgICBpZiBwYW5qYW5ncmQgPT0gNToNCiAgICAgICAgY2hhbmNlcmFuZCA9ICIgIiArIHN0cihoYykgKyAiICINCiAgICAgICAgDQogICAgcmV0dXJuIGNoYW5jZXJhbmQNCg0KIyMgTE9BRCBUUklHRVIgQ0hBTkNFDQpkZWYgbG9hZFRyaWdldEMobnVtKToNCiAgICByZXN1bHRfdHJpZ2VyID0gcmFuZG9tLnVuaWZvcm0oMSxudW0pDQogICAgcmV0dXJuIGludChyZXN1bHRfdHJpZ2VyKQ0KDQojIyBSQU5ET00gQ0hBTkNFICAgDQpkZWYgcmFuZG9tQ2hhbmNlKG1pbiwgbWF4KToNCiAgICBoYXNpbF9jaGFuY2UgPSByb3VuZChyYW5kb20udW5pZm9ybShmbG9hdChtaW4pLCBmbG9hdChtYXgpKSwgMikNCg0KICAgIHJldHVybiBoYXNpbF9jaGFuY2UNCg0KIyMgUkFORE9NIENIQU5DRQ0KZGVmIHNldHRpbmdDaGFuY2UoTENNaW4sIExDTWF4KToNCiAgICB1cnV0ID0gMA0KICAgIGlmIG9ialsiQmV0c2V0Il1bdXJ1dF1bIlJhbmRvbSBDaGFuY2UiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJSYW5kb20gQ2hhbmNlIl1bIlRvZ2dsZSJdID09ICJPbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiUmFuZG9tIENoYW5jZSJdWyJUb2dnbGUiXSA9PSAib24iOg0KICAgICAgICANCiAgICAgICAgY2hhbmNldmFsID0gcmFuZG9tQ2hhbmNlKExDTWluLCBMQ01heCkNCiAgICAgICAgY2hhbmNlcmFuZCA9IHJhbmdlQ2hhbmNlKGNoYW5jZXZhbCkNCiAgICAgICAgDQogICAgZWxzZToNCiAgICAgICAgDQogICAgICAgIGNoYW5jZXZhbCA9IGZsb2F0KExDTWluKQ0KICAgICAgICBjaGFuY2VyYW5kID0gcmFuZ2VDaGFuY2UoY2hhbmNldmFsKQ0KICAgICAgICANCiAgICByZXR1cm4gY2hhbmNldmFsLCBjaGFuY2VyYW5kDQoNCiMgUkVGUkVTSCBQQUdFDQpkZWYgcmVmcmVzaF9wYWdlKCk6DQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQoNCg0KZGVmIGRhdGVyZWcoKToNCiAgICBub3cgPSBkYXRldGltZS5ub3coKQ0KDQogICAgeWVhciA9IG5vdy5zdHJmdGltZSgiJVkiKQ0KICAgIG1vbnRoID0gbm93LnN0cmZ0aW1lKCIlbSIpDQogICAgZGF5ID0gbm93LnN0cmZ0aW1lKCIlZCIpDQogICAgdGltZSA9IG5vdy5zdHJmdGltZSgiJUg6JU06JVMiKQ0KDQogICAgZGF0ZV9yZWdpc3RlciA9IG5vdy5zdHJmdGltZSgiJWQvJW0vJXkgJUg6JU06JVMiKQ0KICAgIA0KICAgIHJldHVybiBkYXRlX3JlZ2lzdGVyDQoNCiMjIE5PTiBNRU1CRVIgUkVHSVNURVIgVkFMSURBVElPTg0KZGVmIGNoZWNrbm9ubWVtYmVydXNlcihjb2RlKToNCiAgICB0cnk6ICAgICAgICANCiAgICAgICAgY2hlY2t1c2VyID0gY2xpZW50LnF1ZXJ5KHEuZ2V0KHEubWF0Y2gocS5pbmRleCgibm9ubWVtYmVyX2J5X2NvZGUiKSwgY29kZSkpKQ0KICAgICAgICANCiAgICAgICAgdXNlcnJlZ2lzID0gY2hlY2t1c2VyWyJkYXRhIl1bInVzZXJuYW1lIl0NCiAgICAgICAgICAgICAgICANCiAgICBleGNlcHQ6DQogICAgICAgIHZhbGlkYXRlZnJlZSgpDQogICAgDQogICAgcmV0dXJuIHVzZXJyZWdpcw0KDQpkZWYgY2hlY2tub25tZW1iZXIoY29kZSk6DQogICAgdHJ5OiAgICAgICAgDQogICAgICAgIG1lbWJlciA9IGNsaWVudC5xdWVyeShxLmdldChxLm1hdGNoKHEuaW5kZXgoIm5vbm1lbWJlcl9ieV9jb2RlIiksIGNvZGUpKSkNCiAgICAgICAgDQogICAgICAgIHN0YXR1cyA9IGludChtZW1iZXJbImRhdGEiXVsicmVnaXN0ZXJfc3RhdHVzIl0pDQogICAgICAgICAgICAgICAgDQogICAgZXhjZXB0Og0KICAgICAgICBzdGF0dXMgPSAwDQogICAgDQogICAgcmV0dXJuIHN0YXR1cw0KDQpkZWYgcmVnaXN0ZXJub25tZW1iZXIoaXAsIGNvZGUsIHVzZXIpOg0KICAgIHRyeToNCiAgICAgICAgZnJlZWFjYyA9IGNsaWVudC5xdWVyeSgNCiAgICAgICAgICAgIHEuY3JlYXRlKA0KICAgICAgICAgICAgICAgcS5jb2xsZWN0aW9uKCJjb2xvcmRpY2Vfbm9ubWVtYmVyIiksDQogICAgICAgICAgICAgICAgeyANCiAgICAgICAgICAgICAgICAiZGF0YSI6IA0KICAgICAgICAgICAgICAgICAgICB7ICAgIA0KICAgICAgICAgICAgICAgICAgICAiaXAiOiBzdHIoaXApLA0KICAgICAgICAgICAgICAgICAgICAicGFzc2NvZGUiOiBzdHIoY29kZSksICAgDQogICAgICAgICAgICAgICAgICAgICJ1c2VybmFtZSI6IHN0cih1c2VyKSwgDQogICAgICAgICAgICAgICAgICAgICJyZWdkYXRlIjogc3RyKGRhdGVyZWcoKSksDQogICAgICAgICAgICAgICAgICAgICJyZWdpc3Rlcl9zdGF0dXMiOiAiMSIgDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICkNCiAgICAgICAgKQ0KICAgICAgICANCiAgICBleGNlcHQ6DQogICAgICAgIHZhbGlkYXRlZnJlZSgpDQoNCmRlZiB2YWxpZGF0ZW5vbm1lbWJlcigpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgDQogICAgd2hveW91ID0gaGFzaGxpYi5tZDUoZ2V0cGFzcy5nZXR1c2VyKCkuZW5jb2RlKCkpDQogICAgaG9zdG5hbWUgPSBzb2NrZXQuZ2V0aG9zdG5hbWUoKQ0KICAgIGlwID0gc29ja2V0LmdldGhvc3RieW5hbWUoaG9zdG5hbWUpDQogICAgDQogICAgcGFzc2NvZGUgPSB3aG95b3UuaGV4ZGlnZXN0KCkNCiAgICANCiAgICByZWdpc3RlcnN0YXR1cyA9IGNoZWNrbm9ubWVtYmVyKHBhc3Njb2RlKQ0KICAgIGlmIHJlZ2lzdGVyc3RhdHVzID09IDE6DQogICAgICAgIHJlZ3VzZXIgPSBjaGVja25vbm1lbWJlcnVzZXIocGFzc2NvZGUpDQogICAgICAgIGlmIHVzZXJuYW1lID09IHJlZ3VzZXI6DQogICAgICAgICAgICBwYXNzDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludChwdXRpaCArICJZb3UgaGF2ZSB1c2VkIGEgYm90IHdpdGggYWNjb3VudCBuYW1lICIgKyBzdHIocmVndXNlcikgKyAiLCBwbGVhc2UgY29udGFjdCB0aGUgb3duZXIgZm9yIG1vcmUgaW5mb3JtYXRpb24iICsgcmVzKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICAgICAgc3lzLmV4aXQoKQ0KICAgIGVsc2U6DQogICAgICAgIHJlZ2lzdGVybm9ubWVtYmVyKGlwLCBwYXNzY29kZSwgdXNlcm5hbWUpDQogICAgICAgIHZhbGlkYXRlbm9ubWVtYmVyKCkNCg0KIyMgTUVNQkVSIFJFR0lTVEVSIFZBTElEQVRJT04NCmRlZiBjcmVhdGVmaWxlcGFzcyhwYXNzYyk6DQogICAgcmVmcmVzaF9wYWdlKCkNCiAgICBmID0gb3BlbigiYWN0aXZhdGVkLnBhc3MiLCAidysiKQ0KICAgIGYud3JpdGUocGFzc2MpDQogICAgZi5jbG9zZSgpDQogICAgDQpkZWYgcmVhZHBhc3MoZmwpOg0KICAgIGYgPSBvcGVuKGZsLCAiciIpDQogICAgaWYgZi5tb2RlID09ICdyJzoNCiAgICAgICAgcGFzc2MgPSBmLnJlYWQoKQ0KDQogICAgcmV0dXJuIHBhc3NjDQoNCmRlZiBjaGVja3JlZ2lzdGVyYWN0aXZhdGVkKGNvZGUpOg0KICAgIHRyeTogICAgICAgIA0KICAgICAgICBtZW1iZXIgPSBjbGllbnQucXVlcnkocS5nZXQocS5tYXRjaChxLmluZGV4KCJjb2xvcmRpY2VfcmVnaXN0ZXJlZCIpLCBjb2RlKSkpDQogICAgICAgIA0KICAgICAgICBzdGF0dXMgPSBpbnQobWVtYmVyWyJkYXRhIl1bInJlZ2lzdGVyX3N0YXR1cyJdKQ0KICAgICAgICAgICAgICAgIA0KICAgIGV4Y2VwdDoNCiAgICAgICAgc3RhdHVzID0gMA0KICAgIA0KICAgIHJldHVybiBzdGF0dXMNCg0KZGVmIGNoZWNrY29kZWFjdGl2YXRlZChjb2RlKToNCiAgICB0cnk6ICAgICAgICANCiAgICAgICAgbWVtYmVyID0gY2xpZW50LnF1ZXJ5KHEuZ2V0KHEubWF0Y2gocS5pbmRleCgiY29sb3JkaWNlX2FjdGl2YXRlZCIpLCBjb2RlKSkpDQogICAgICAgIA0KICAgICAgICBzdGF0dXMgPSBpbnQobWVtYmVyWyJkYXRhIl1bImFjdGl2YXRlZF9zdGF0dXMiXSkNCiAgICAgICAgICAgICAgICANCiAgICBleGNlcHQ6DQogICAgICAgIHN0YXR1cyA9IDANCiAgICANCiAgICByZXR1cm4gc3RhdHVzDQoNCmRlZiByZWdpc3Rlcm1lbWJlcihpcCwgY29kZSwgdXNlciwgcmVnaXNjb2RlKToNCiAgICB0cnk6DQogICAgICAgIG1lbWJlcmFjYyA9IGNsaWVudC5xdWVyeSgNCiAgICAgICAgICAgIHEuY3JlYXRlKA0KICAgICAgICAgICAgICAgcS5jb2xsZWN0aW9uKCJjb2xvcmRpY2VfbWVtYmVyX3ByZW1pdW0iKSwNCiAgICAgICAgICAgICAgICB7IA0KICAgICAgICAgICAgICAgICJkYXRhIjogDQogICAgICAgICAgICAgICAgICAgIHsgICAgDQogICAgICAgICAgICAgICAgICAgICJpcCI6IHN0cihpcCksDQogICAgICAgICAgICAgICAgICAgICJwYXNzY29kZSI6IHN0cihjb2RlKSwNCiAgICAgICAgICAgICAgICAgICAgImFjdGl2YXRlZF9jb2RlIjogc3RyKHJlZ2lzY29kZSksICAgDQogICAgICAgICAgICAgICAgICAgICJ1c2VybmFtZSI6IHN0cih1c2VyKSwgDQogICAgICAgICAgICAgICAgICAgICJyZWdkYXRlIjogc3RyKGRhdGVyZWcoKSksDQogICAgICAgICAgICAgICAgICAgICJyZWdpc3Rlcl9zdGF0dXMiOiAiMSIgDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICkNCiAgICAgICAgKQ0KICAgICAgICB1cGRhdGVtZW1iZXJzdGF0dXMocmVnaXNjb2RlKQ0KICAgICAgICANCiAgICBleGNlcHQ6DQogICAgICAgIHZhbGlkYXRlbWVtYmVyKCkNCg0KZGVmIHVwZGF0ZW1lbWJlcnN0YXR1cyhjb2RlKToNCiAgICB0cnk6DQogICAgICAgIG1lbWJlciA9IGNsaWVudC5xdWVyeShxLmdldChxLm1hdGNoKHEuaW5kZXgoImNvbG9yZGljZV9hY3RpdmF0ZWQiKSwgY29kZSkpKQ0KICAgICAgICByZWYgPSBtZW1iZXJbInJlZiJdLnZhbHVlWyJpZCJdDQogICAgICAgIGNsaWVudC5xdWVyeShxLnVwZGF0ZShxLnJlZihxLmNvbGxlY3Rpb24oImNvbG9yZGljZV9hY3RpdmF0ZWQiKSwgcmVmKSwgDQogICAgICAgICAgICB7IA0KICAgICAgICAgICAgICAgICJkYXRhIjogDQogICAgICAgICAgICAgICAgICAgIHsgDQogICAgICAgICAgICAgICAgICAgICAgICAiYWN0aXZhdGVkX3N0YXR1cyI6ICIwIiANCiAgICAgICAgICAgICAgICAgICAgfSANCiAgICAgICAgICAgICAgICB9IA0KICAgICAgICAgICAgKSkNCiAgICBleGNlcHQ6DQogICAgICAgIHZhbGlkYXRlbWVtYmVyKCkNCg0KZGVmIGNoZWNrbWVtYmVyKGNvZGUpOg0KICAgIHRyeTogICAgICAgIA0KICAgICAgICBtZW1iZXIgPSBjbGllbnQucXVlcnkocS5nZXQocS5tYXRjaChxLmluZGV4KCJjaGVja19tZW1iZXJfcHJlbWl1bSIpLCBjb2RlKSkpDQogICAgICAgIA0KICAgICAgICBzdGF0dXMgPSBpbnQobWVtYmVyWyJkYXRhIl1bInJlZ2lzdGVyX3N0YXR1cyJdKQ0KICAgICAgICAgICAgICAgIA0KICAgIGV4Y2VwdDoNCiAgICAgICAgc3RhdHVzID0gMA0KICAgIA0KICAgIHJldHVybiBzdGF0dXMNCg0KZGVmIHZhbGlkYXRlbWVtYmVyKCk6DQogICAgcmVmcmVzaF9wYWdlKCkNCiANCiAgICB3aG95b3UgPSBoYXNobGliLm1kNSh1c2VybmFtZS5lbmNvZGUoKSkNCiAgICBob3N0bmFtZSA9IHNvY2tldC5nZXRob3N0bmFtZSgpDQogICAgaXAgPSBzb2NrZXQuZ2V0aG9zdGJ5bmFtZShob3N0bmFtZSkNCiAgICANCiAgICB0cnk6DQogICAgICAgIGlucHV0cGFzcyA9IGZnKDYyKSArICdccicgKyBmZygxNSkgKyAnPj4gJyArIHJlcyArIGZnKDIwMikgKyAnUGxlYXNlIEVudGVyIFlvdXIgQWN0aXZhdGlvbiBDb2RlOiAnICsgcmVzDQogICAgICAgIHBhc3NpbnB1dCA9IGlucHV0aW1lb3V0KHByb21wdD1pbnB1dHBhc3MsIHRpbWVvdXQ9NjAwKQ0KICAgICAgICBpZiBwYXNzaW5wdXQgPT0gIiI6DQogICAgICAgICAgICB2YWxpZGF0ZW1lbWJlcigpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICB2YWxpZGNvZGUgPSBjaGVja2NvZGVhY3RpdmF0ZWQocGFzc2lucHV0KQ0KICAgICAgICAgICAgaWYgdmFsaWRjb2RlID09IDE6DQogICAgICAgICAgICAgICAgcGFzc2NvZGUgPSBzdHIod2hveW91LmhleGRpZ2VzdCgpKQ0KICAgICAgICAgICAgICAgIHJlZ2lzdGVybWVtYmVyKGlwLCBwYXNzY29kZSwgdXNlcm5hbWUsIHBhc3NpbnB1dCkNCiAgICAgICAgICAgICAgICBjcmVhdGVmaWxlcGFzcyhwYXNzaW5wdXQpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHJlZnJlc2hfcGFnZSgpDQogICAgICAgICAgICAgICAgcHJpbnQoIlRoZSBBY3RpdmF0aW9uIENvZGUgWW91IEVudGVyZWQgaXMgV3JvbmcsIFBsZWFzZSBUcnkgQWdhaW4iKQ0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgICAgICAgICB2YWxpZGF0ZW1lbWJlcigpDQogICAgICAgICAgICAgICAgDQogICAgZXhjZXB0IFRpbWVvdXRPY2N1cnJlZDoNCiAgICAgICAgdmFsaWRhdGVtZW1iZXIoKQ0KICAgICAgICANCiAgICANCg0KIyMgRlJFRSBWRVJTSU9OIFZBTElEQVRJT04NCmRlZiB2YWxpZGF0ZWJhbGFuY2UoY3VyciwgZGF0YSk6DQogICAgaWYgY3VyciA9PSAiRE9HRSIgb3IgY3VyciA9PSAiZG9nZSIgb3IgY3VyciA9PSAiRG9nZSI6DQogICAgICAgIGN1cnJiYWxhbmNlID0gZGF0YVtjdXJyZW5jeV1bIkJhbGFuY2UiXQ0KICAgICAgICBsbSA9IDUNCiAgICAgICAgbGltaXRiYWwgPSBpbnQoZmxvYXQobG0pKigxMCAqKiA4KSkNCiAgICBlbGlmIGN1cnIgPT0gIkxUQyIgb3IgY3VyciA9PSAibHRjIiBvciBjdXJyID09ICJMdGMiOg0KICAgICAgICBjdXJyYmFsYW5jZSA9IGRhdGFbY3VycmVuY3ldWyJCYWxhbmNlIl0NCiAgICAgICAgbG0gPSAwLjAxDQogICAgICAgIGxpbWl0YmFsID0gaW50KGZsb2F0KGxtKSooMTAgKiogOCkpDQogICAgZWxzZToNCiAgICAgICAgY3VycmJhbGFuY2UgPSBkYXRhW2N1cnJlbmN5XVsiQmFsYW5jZSJdDQogICAgICAgIGxtID0gMC4wMDENCiAgICAgICAgbGltaXRiYWwgPSBpbnQoZmxvYXQobG0pKigxMCAqKiA4KSkNCiAgICANCiAgICBpZiBjdXJyYmFsYW5jZSA+PSBsaW1pdGJhbDoNCiAgICAgICAgcmVmcmVzaF9wYWdlKCkNCiAgICAgICAgcHJpbnQobWVyYWggKyAiVGhpcyBpcyB0aGUgIiArIHJlcyArIGF0dHIoJ2JvbGQnKSAgKyAiZnJlZSB2ZXJzaW9uLCIgKyBtZXJhaCArICIgdGhlIGJhbGFuY2UgdXNlZCBpcyAiICsgcmVzICsgYXR0cignYm9sZCcpICsgIm9ubHkgIiArIHN0cihsbSkgKyAiICIgKyBjdXJyLmxvd2VyKCkgKyAiLCAiICsgbWVyYWggKyAiZm9yIG1vcmUgaW5mbyBwbGVhc2UgY29udGFjdCB1cy4iICsgcmVzKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHN5cy5leGl0KCkNCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQogICAgDQpkZWYgdmFsaWRhdGVtb2RlcyhwaWxtb2RlKToNCiAgICBpZiBjdXJyYmFsYW5jZSA+PSBpbnQoZmxvYXQoMSkqKDEwICoqIDgpKToNCiAgICAgICAgaWYgcGlsbW9kZSA9PSA3Og0KICAgICAgICAgICAgcGlsbW9kZSA9ICJkYWxlbWJlcnQiDQogICAgICAgIGVsaWYgcGlsbW9kZSA9PSA4Og0KICAgICAgICAgICAgcGlsbW9kZSA9ICJmaWJvbmFjY2kiDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwYXNzDQogICAgICAgIA0KICAgICAgICByZWZyZXNoX3BhZ2UoKQ0KICAgICAgICBwcmludChtZXJhaCArICJUaGlzIGlzIHRoZSAiICsgcmVzICsgYXR0cignYm9sZCcpICArICJmcmVlIHZlcnNpb24sIiArIG1lcmFoICsgIiBtb2RlICIgKyBzdHIocGlsbW9kZSkgKyAiIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHByZW1pdW0gdmVyc2lvbiIgKyByZXMpDQogICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgc3lzLmV4aXQoKQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCg0KZGVmIHJlZ2lzdGVyZnJlZShpcCwgY29kZSwgdXNlcik6DQogICAgdHJ5Og0KICAgICAgICBmcmVlYWNjID0gY2xpZW50LnF1ZXJ5KA0KICAgICAgICAgICAgcS5jcmVhdGUoDQogICAgICAgICAgICAgICBxLmNvbGxlY3Rpb24oImNvbG9yZGljZV9tZW1iZXJfZnJlZSIpLA0KICAgICAgICAgICAgICAgIHsgDQogICAgICAgICAgICAgICAgImRhdGEiOiANCiAgICAgICAgICAgICAgICAgICAgeyAgICANCiAgICAgICAgICAgICAgICAgICAgImlwIjogc3RyKGlwKSwNCiAgICAgICAgICAgICAgICAgICAgInBhc3Njb2RlIjogc3RyKGNvZGUpLCANCiAgICAgICAgICAgICAgICAgICAgInVzZXJuYW1lIjogc3RyKHVzZXIpLCANCiAgICAgICAgICAgICAgICAgICAgInJlZ2RhdGUiOiBzdHIoZGF0ZXJlZygpKSwNCiAgICAgICAgICAgICAgICAgICAgInJlZ2lzdGVyX3N0YXR1cyI6ICIxIiANCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgKQ0KICAgICAgICApDQogICAgICAgIA0KICAgIGV4Y2VwdDoNCiAgICAgICAgdmFsaWRhdGVmcmVlKCkNCg0KZGVmIGNoZWNrZnJlZXVzZXIoY29kZSk6DQogICAgdHJ5OiAgICAgICAgDQogICAgICAgIGNoZWNrdXNlciA9IGNsaWVudC5xdWVyeShxLmdldChxLm1hdGNoKHEuaW5kZXgoImNoZWNrX21lbWJlcl9mcmVlIiksIGNvZGUpKSkNCiAgICAgICAgDQogICAgICAgIHVzZXJyZWdpcyA9IGNoZWNrdXNlclsiZGF0YSJdWyJ1c2VybmFtZSJdDQogICAgICAgICAgICAgICAgDQogICAgZXhjZXB0Og0KICAgICAgICB2YWxpZGF0ZWZyZWUoKQ0KICAgIA0KICAgIHJldHVybiB1c2VycmVnaXMNCg0KZGVmIGNoZWNrZnJlZShjb2RlKToNCiAgICB0cnk6ICAgICAgICANCiAgICAgICAgbWVtYmVyID0gY2xpZW50LnF1ZXJ5KHEuZ2V0KHEubWF0Y2gocS5pbmRleCgiY2hlY2tfbWVtYmVyX2ZyZWUiKSwgY29kZSkpKQ0KICAgICAgICANCiAgICAgICAgc3RhdHVzID0gaW50KG1lbWJlclsiZGF0YSJdWyJyZWdpc3Rlcl9zdGF0dXMiXSkNCiAgICAgICAgICAgICAgICANCiAgICBleGNlcHQ6DQogICAgICAgIHN0YXR1cyA9IDANCiAgICANCiAgICByZXR1cm4gc3RhdHVzDQoNCmRlZiBnZXRNYWNoaW5lX2FkZHIoKToNCglvc190eXBlID0gc3lzLnBsYXRmb3JtLmxvd2VyKCkNCglpZiAid2luIiBpbiBvc190eXBlOg0KCQljb21tYW5kID0gIndtaWMgYmlvcyBnZXQgc2VyaWFsbnVtYmVyIg0KCWVsaWYgImxpbnV4IiBpbiBvc190eXBlOg0KCQljb21tYW5kID0gImhhbC1nZXQtcHJvcGVydHkgLS11ZGkgL29yZy9mcmVlZGVza3RvcC9IYWwvZGV2aWNlcy9jb21wdXRlciAtLWtleSBzeXN0ZW0uaGFyZHdhcmUudXVpZCINCgllbGlmICJkYXJ3aW4iIGluIG9zX3R5cGU6DQoJCWNvbW1hbmQgPSAiaW9yZWcgLWwgfCBncmVwIElPUGxhdGZvcm1TZXJpYWxOdW1iZXIiDQoJcmV0dXJuIG9zLnBvcGVuKGNvbW1hbmQpLnJlYWQoKS5yZXBsYWNlKCJcbiIsIiIpLnJlcGxhY2UoIgkiLCIiKS5yZXBsYWNlKCIgIiwiIikNCg0KZGVmIHZhbGlkYXRlZnJlZSgpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgDQogICAgdXNlcm5hbWUgPSBvYmpbIkFjY291bnQiXVsiVXNlcm5hbWUiXQ0KICAgIHdob3lvdSA9IGhhc2hsaWIubWQ1KHVzZXJuYW1lLmVuY29kZSgpKQ0KICAgIA0KICAgIHBhc3Njb2RlID0gc3RyKHdob3lvdS5oZXhkaWdlc3QoKSkNCiAgICANCiAgICByZWdpc3RlcnN0YXR1cyA9IGNoZWNrZnJlZShwYXNzY29kZSkNCiAgICBpZiByZWdpc3RlcnN0YXR1cyA9PSAxOg0KICAgICAgICBwYXNzDQogICAgZWxzZToNCiAgICAgICAgcmVnaXN0ZXIgPSBpbnB1dChmZygxNSkgKyAnXHInICc+PiAnICsgJ1lvdSBub3QgaGF2ZSByZWdpc3RlcmVkIGNvbG9yZGljZSAnICsgYXR0cignYm9sZCcpICsgJ01lbWJlciBGUkVFJyArIHJlcyArICcsIFByZXNzIGVudGVyIGtleSB0byBhY2NvdW50IHJlZ2lzdGVyICcgKyByZXMpDQogICAgICAgIGlmIHJlZ2lzdGVyID09ICIiOg0KICAgICAgICAgICAgbWVudWNvbG9yZGljZSgpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBtZW51Y29sb3JkaWNlKCkNCg0KZGVmIGNvbm5lY3RfYXBpKHVybCwgdWE9Tm9uZSwgZGF0YT1Ob25lKToNCgl3aGlsZSBUcnVlOg0KCQl0cnk6DQoJCQlpZiB1YSA9PSBOb25lIGFuZCBkYXRhID09IE5vbmU6DQoJCQkJcmVzcG9uID0gYy5nZXQodXJsKQ0KCQkJaWYgZGF0YSAhPSBOb25lOg0KCQkJCXJlc3BvbiA9IGMucG9zdCh1cmwsaGVhZGVycz11YSxkYXRhPWRhdGEpDQoJCQllbHNlOg0KCQkJCXJlc3BvbiA9IGMuZ2V0KHVybCxoZWFkZXJzPXVhKQ0KCQkJcmV0dXJuIHJlc3Bvbg0KCQlleGNlcHQgQ29ubmVjdGlvbkVycm9yOg0KCQkJcHJpbnQoIlshXSBLb25la3NpIEVycm9yISIpDQoJCQl0aW1lLnNsZWVwKDEpDQoJCWV4Y2VwdCByZXF1ZXN0cy5UaW1lb3V0IGFzIGVycjoNCgkJCXByaW50KGVyci5tZXNzYWdlKQ0KCQkJdGltZS5zbGVlcCgxKQ0KCQlleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6DQoJCQlleGl0KCJbWF0gRXhpdCIpDQogICANCmRlZiByZWdpc3RlcihydXNlciwgcnBhc3MpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgcmFuZG9tbnVtID0gcm91bmQocmFuZG9tLnVuaWZvcm0oMSwgMTApKQ0KICAgIGlmIHJhbmRvbW51bSAlIDIgPT0gMDoNCiAgICAgICAgcjEgPSBjb25uZWN0X2FwaSgiaHR0cHM6Ly93d3cuOTk5ZG9nZS5jb20vPzQwOTc1NDkyNSIpLmNvb2tpZXMNCiAgICBlbHNlOg0KICAgICAgICByMSA9IGNvbm5lY3RfYXBpKCJodHRwczovL3d3dy45OTlkb2dlLmNvbS8/MzI3OTk4NTg5IikuY29va2llcw0KICAgICAgICANCiAgICBzZXNpID0gcjFbIlNlc3Npb25JZCJdDQogICAgZGF0YSA9IHsNCiAgICAgICAgImEiOiAiQ3JlYXRlVXNlciIsDQogICAgICAgICJzIjogc2VzaSwNCiAgICAgICAgIlVzZXJuYW1lIjogcnVzZXIsDQogICAgICAgICJQYXNzd29yZCI6IHJwYXNzDQogICAgfQ0KICAgIA0KICAgIHIxID0gY29ubmVjdF9hcGkodXJsLHVhLGRhdGEpDQogICAganNuID0ganNvbi5sb2FkcyhyMS50ZXh0KQ0KICAgIHRyeToNCiAgICAgICAgaWYganNuWydzdWNjZXNzJ10gPT0gMToNCiAgICAgICAgICAgIHByaW50KGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyAiPSIqNDcgKyByZXMpDQogICAgICAgICAgICBvYmpbIkFjY291bnQiXVsiVXNlcm5hbWUiXSA9IHJ1c2VyDQogICAgICAgICAgICBvYmpbIkFjY291bnQiXVsiUGFzc3dvcmQiXSA9IHJwYXNzDQogICAgICAgICAgICBmID0gb3Blbigic2V0dGluZ3MuanNvbiIsICJ3IikNCiAgICAgICAgICAgIGYud3JpdGUoanNvbi5kdW1wcyhvYmosIGluZGVudD0xKSkNCiAgICAgICAgICAgIGYuY2xvc2UoKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICB3aG95b3UgPSBoYXNobGliLm1kNShydXNlci5lbmNvZGUoKSkNCiAgICAgICAgICAgIGhvc3RuYW1lID0gc29ja2V0LmdldGhvc3RuYW1lKCkNCiAgICAgICAgICAgIGlwID0gc29ja2V0LmdldGhvc3RieW5hbWUoaG9zdG5hbWUpDQogICAgICAgICAgICANCiAgICAgICAgICAgIHBhc3Njb2RlID0gc3RyKHdob3lvdS5oZXhkaWdlc3QoKSkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgaWYgZnJlZXZlcnNpb24gaXMgVHJ1ZToNCiAgICAgICAgICAgICAgICByZWdpc3RlcmZyZWUoaXAsIHBhc3Njb2RlLCBydXNlcikNCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgZmlsZSA9IHBhdGhsaWIuUGF0aCgiYWN0aXZhdGVkLnBhc3MiKQ0KICAgICAgICAgICAgICAgIGNvZGUgPSByZWFkcGFzcyhmaWxlKQ0KICAgICAgICAgICAgICAgIHJlZ2lzdGVybWVtYmVyKGlwLCBwYXNzY29kZSwgcnVzZXIsIGNvZGUpDQogICAgICAgICAgICANCiAgICAgICAgICAgIHByaW50KGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyAiICIqcm91bmQoKDQ3LWxlbigiUkVHSVNURVIgU1VDQ0VTUyIpKS8yKSArICJSRUdJU1RFUiBTVUNDRVNTIikNCiAgICAgICAgICAgIHByaW50KGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyAiPSIqNDcgKyByZXMpDQogICAgICAgICAgICBiYWNrID0gaW5wdXQoZmcoMTUpICsgJ1xyJyAnPj4gJyArICdQcmVzcyBFbnRlciBLZXkgVG8gUmV0dXJuIFRvIE1haW4gTWVudSAnICsgcmVzKQ0KICAgICAgICAgICAgaWYgYmFjayA9PSAiIjoNCiAgICAgICAgICAgICAgICBtZW51Y29sb3JkaWNlKCkNCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgbWVudWNvbG9yZGljZSgpDQogICAgZXhjZXB0Og0KICAgICAgICBpZiAnVXNlcm5hbWVUYWtlbicgaW4ganNuOg0KICAgICAgICAgICAgcHJpbnQoZmcocm91bmQocmFuZG9tLnVuaWZvcm0oMjAsIDIxOSkpKSArICI9Iio0NyArIHJlcykNCiAgICAgICAgICAgIHByaW50KGZnKHJvdW5kKHJhbmRvbS51bmlmb3JtKDIwLCAyMTkpKSkgKyAiICIqcm91bmQoKDQ3LWxlbigiVVNFUk5BTUUgQUxSRUFEWSBFWElTVFMiKSkvMikgKyBzdHIoIlVTRVJOQU1FIEFMUkVBRFkgRVhJU1RTIikudXBwZXIoKSkNCiAgICAgICAgICAgIHByaW50KGZnKHJvdW5kKHJhbmR'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))